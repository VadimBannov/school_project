import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import time
from config import *
from gpt import GPT
from database import *

# –¢–æ–∫–µ–Ω –∏ –∫–ª–∞—Å—Å GPT
bot = telebot.TeleBot(BOT_TOKEN)
gpt = GPT()

# –°–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
prepare_db()
get_all_rows(DB_TABLE_USERS_NAME)

# –í—ã–≤–µ–¥–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ —Å –ø–æ–º–æ—â—å—é Logging
logging.basicConfig(
    level=logging.DEBUG, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    filename="log_file.txt", filemode="a",
)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
def create_markup(button_labels):
    markup = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    for label in button_labels:
        markup.add(KeyboardButton(label))
    return markup


# debug –∏ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
@bot.message_handler(commands=['debug'])
def debug_command(message):
    with open("log_file.txt", "r", encoding="latin1") as f:
        bot.send_document(message.chat.id, f)


@bot.message_handler(commands=["history"])
@bot.message_handler(func=lambda message: "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤" in message.text)
def command_history(message):
    user_id = message.from_user.id
    history = get_data_for_user(user_id)
    if history:
        history_text = f"{history['timestamp']}:  ({history['task']})  -  ({history['answer']})"
        bot.send_message(message.chat.id, f"–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:\n{history_text}")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.")


@bot.message_handler(commands=["start"])
def start_command(message):
    user_name, user_id = message.from_user.first_name, message.from_user.id
    if is_value_in_table(DB_TABLE_USERS_NAME, "user_id", user_id):
        delete_user(user_id)
    insert_row([user_id, 'null', 'null', 'null', 'null', 'null', "null"])
    bot.send_photo(message.chat.id, LINK_IMAGE[0], f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π {user_name}! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç ¬´–ú–∏—Ä "
                                                   f"–ø–æ–¥–∞—Ä–∫–æ–≤¬ª. –ß—Ç–æ–±—ã –±–æ—Ç –Ω–∞–ø–∏—Å–∞–ª –≤–∞—à –ø–æ–¥–∞—Ä–æ–∫, "
                                                   f"–≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ò–ª–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å "
                                                   f"–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞, –∏–ª–∏ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ.\n\n"
                                                   "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫:",
                   reply_markup=create_markup(["–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–ù–æ–≤—ã–π –≥–æ–¥", "14 —Ñ–µ–≤—Ä–∞–ª—è", "23 —Ñ–µ–≤—Ä–∞–ª—è", "‚ü∂"]))


@bot.message_handler(func=lambda message: "‚ü∂" in message.text)
def other_options(message):
    bot.send_message(message.chat.id, "‚ü∂",
                     reply_markup=create_markup(["üìö–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "ü§ñ–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞", "‚üµ"]))


@bot.message_handler(commands=["help"])
@bot.message_handler(func=lambda message: "üìö–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" in message.text)
def help_command(message):
    message_text = message.text
    bot.send_message(message.chat.id,  "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
                                       "üìö–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ ¬´–ú–∏—Ä –ø–æ–¥–∞—Ä–∫–æ–≤¬ª\n\n\n"
                                       "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –±–æ—Ç–µ ¬´–ú–∏—Ä –ø–æ–¥–∞—Ä–∫–æ–≤¬ª! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π "
                                       "–ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –≤–∞—à–∏—Ö –±–ª–∏–∑–∫–∏—Ö –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏. –í–æ—Ç –∫–∞–∫ –∏–º "
                                       "–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n\n\n"
                                       "–í—ã–±–æ—Ä –ø—Ä–∞–∑–¥–Ω–∏–∫–∞: –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.\n\n"
                                       "–í—ã–±–æ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–∞: –£–∫–∞–∂–∏—Ç–µ, –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫, "
                                       "–≤—ã–±—Ä–∞–≤ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.\n\n"
                                       "–£—Ç–æ—á–Ω–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞: –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, –£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–∞, "
                                       "–≤—ã–±—Ä–∞–≤ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤ –≤–æ–∑—Ä–∞—Å—Ç–∞.\n\n"
                                       "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: –ë–æ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ–¥–∞—Ä–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ "
                                       "–≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≤–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.\n\n"
                                       "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å: –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, –µ—Å–ª–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ –±–æ—Ç –Ω–µ –¥–æ–ø–∏—Å–∞–ª "
                                       "–ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª, –∏ —Ç–æ–≥–¥–∞ –±–æ—Ç –¥–æ–ø–∏—à–µ—Ç "
                                       "–µ–≥–æ, –∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é.\n\n"
                                       "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞: –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ –∏–ª–∏ "
                                       "–∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–ø–æ–Ω–æ–∫.\n"
                                       "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî",
                     reply_markup=create_markup(["üìö–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "ü§ñ–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞", "‚üµ"]))
    if message_text == "/help":
        bot.send_message(message.chat.id, "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –±—ã–ª–∏ —É–±—Ä–∞–Ω—ã", reply_markup=ReplyKeyboardRemove())


@bot.message_handler(commands=["about"])
@bot.message_handler(func=lambda message: "ü§ñ–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞" in message.text)
def about_command(message):
    message_text = message.text
    bot.send_message(message.chat.id, "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
                                      "ü§ñ–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ ¬´–ú–∏—Ä –ø–æ–¥–∞—Ä–∫–æ–≤¬ª\n\n\n"
                                      "–ë–æ—Ç ¬´–ú–∏—Ä –ø–æ–¥–∞—Ä–∫–æ–≤¬ª - —ç—Ç–æ —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π "
                                      "–ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –≤–∞—à–∏—Ö –±–ª–∏–∑–∫–∏—Ö –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏. –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –≤–∞–º "
                                      "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ –ø–æ–Ω—Ä–∞–≤—è—Ç—Å—è –≤–∞—à–∏–º –¥—Ä—É–∑—å—è–º –∏ —Å–µ–º—å–µ.\n\n\n"
                                      "–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n\n"
                                      "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: –ë–æ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∞—Ä–∫–∞ "
                                      "(–ø—Ä–∞–∑–¥–Ω–∏–∫, –ø–æ–ª—É—á–∞—Ç–µ–ª—å, –≤–æ–∑—Ä–∞—Å—Ç) –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ–¥–∞—Ä–∫–∏.\n\n"
                                      "–®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤: –í—ã–±–∏—Ä–∞–π—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤, —á—Ç–æ–±—ã "
                                      "—Å–¥–µ–ª–∞—Ç—å –∏—Ö –æ—Å–æ–±–µ–Ω–Ω—ã–º–∏ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º–∏—Å—è.\n\n"
                                      "–ü—Ä–æ—Å—Ç–æ–π –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏: –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –∏ "
                                      "–±—ã—Å—Ç—Ä–æ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–æ–¥–∞—Ä–æ–∫.\n\n"
                                      "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤: –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏"
                                      " —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.\n\n"
                                      "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: –ë–æ—Ç —É—á–∏—Ç—ã–≤–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–æ–¥–∞—Ä–∫–∞"
                                      " –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º.\n\n\n"
                                      "–ù–µ —Ç–µ—Ä—è–π—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –ø–æ–∏—Å–∫ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–∞—Ö - –¥–æ–≤–µ—Ä—å—Ç–µ—Å—å –±–æ—Ç—É "
                                      "¬´–ú–∏—Ä –ø–æ–¥–∞—Ä–∫–æ–≤¬ª –∏ —Å–¥–µ–ª–∞–π—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º –¥–ª—è –≤–∞—à–∏—Ö –±–ª–∏–∑–∫–∏—Ö!\n"
                                      "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî",
                     reply_markup=create_markup(["üìö–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "ü§ñ–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞", "‚üµ"]))
    if message_text == "/about":
        bot.send_message(message.chat.id, "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –±—ã–ª–∏ —É–±—Ä–∞–Ω—ã", reply_markup=ReplyKeyboardRemove())


@bot.message_handler(commands=["help_with_holiday"])
def command_help_with_holiday(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫: ",
                     reply_markup=create_markup(["–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–ù–æ–≤—ã–π –≥–æ–¥", "14 —Ñ–µ–≤—Ä–∞–ª—è", "23 —Ñ–µ–≤—Ä–∞–ª—è"]))
    bot.register_next_step_handler(message, processing_selected_holiday)
    return


@bot.message_handler(commands=["help_with_recipient"])
def command_help_with_recipient(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫: ",
                     reply_markup=create_markup(["–†–µ–±–µ–Ω–∫—É", "–†–æ–¥–∏—Ç–µ–ª—è–º", "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É", "–î—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ"]))
    bot.register_next_step_handler(message, processing_selected_recipient)
    return


@bot.message_handler(commands=['continue_explaining'])
@bot.message_handler(func=lambda message: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" in message.text)
def continue_commands(message):
    if (is_value_in_table(DB_TABLE_USERS_NAME, "holiday", "null") or
            is_value_in_table(DB_TABLE_USERS_NAME, "recipient", "null") or
            is_value_in_table(DB_TABLE_USERS_NAME, "age", "null") or
            is_value_in_table(DB_TABLE_USERS_NAME, "task", "null")):
        if is_value_in_table(DB_TABLE_USERS_NAME, "holiday", "null"):
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫: ",
                             reply_markup=create_markup(["–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–ù–æ–≤—ã–π –≥–æ–¥", "14 —Ñ–µ–≤—Ä–∞–ª—è", "23 —Ñ–µ–≤—Ä–∞–ª—è"]))
            bot.register_next_step_handler(message, processing_selected_holiday)
            return
        elif is_value_in_table(DB_TABLE_USERS_NAME, "recipient", "null"):
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫: ",
                             reply_markup=create_markup(["–†–µ–±–µ–Ω–∫—É", "–†–æ–¥–∏—Ç–µ–ª—è–º", "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É", "–î—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ"]))
            bot.register_next_step_handler(message, processing_selected_recipient)
            return
        elif is_value_in_table(DB_TABLE_USERS_NAME, " age", "null"):
            bot.send_message(message.chat.id,
                             "–°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫:",
                             reply_markup=create_markup(["–ú–ª–∞–¥—à–µ 12", "12-18", "18-24", "–°—Ç–∞—Ä—à–µ 24"]))
            bot.register_next_step_handler(message, indication_age)
            return
        else:
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ")
            bot.register_next_step_handler(message, start_command)
            return
    bot.send_message(message.chat.id, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ —á—É—Ç–∫–∞", reply_markup=ReplyKeyboardRemove())
    generating_gift(message)
    return


@bot.message_handler(commands=['end_dialog'])
@bot.message_handler(func=lambda message: "–ó–∞–≤–µ—Ä—à–∏—Ç—å" in message.text)
def end_task_commands(message):
    if (is_value_in_table(DB_TABLE_USERS_NAME, "holiday", "null") or
            is_value_in_table(DB_TABLE_USERS_NAME, "recipient", "null") or
            is_value_in_table(DB_TABLE_USERS_NAME, "age", "null") or
            is_value_in_table(DB_TABLE_USERS_NAME, "task", "null")):
        if is_value_in_table(DB_TABLE_USERS_NAME, "holiday", "null"):
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫: ",
                             reply_markup=create_markup(["–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–ù–æ–≤—ã–π –≥–æ–¥", "14 —Ñ–µ–≤—Ä–∞–ª—è", "23 —Ñ–µ–≤—Ä–∞–ª—è"]))
            bot.register_next_step_handler(message, processing_selected_holiday)
            return
        elif is_value_in_table(DB_TABLE_USERS_NAME, "recipient", "null"):
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫: ",
                             reply_markup=create_markup(["–†–µ–±–µ–Ω–∫—É", "–†–æ–¥–∏—Ç–µ–ª—è–º", "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É", "–î—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ"]))
            bot.register_next_step_handler(message, processing_selected_recipient)
            return
        elif is_value_in_table(DB_TABLE_USERS_NAME, " age", "null"):
            bot.send_message(message.chat.id,
                             "–°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫:",
                             reply_markup=create_markup(["–ú–ª–∞–¥—à–µ 12", "12-18", "18-24", "–°—Ç–∞—Ä—à–µ 24"]))
            bot.register_next_step_handler(message, indication_age)
            return
        else:
            bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ")
            bot.register_next_step_handler(message, start_command)
            return
    time.sleep(2)
    bot.send_message(message.chat.id, "–¢–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ",
                     reply_markup=ReplyKeyboardRemove())
    start_command(message)
    return


@bot.message_handler()
def processing_selected_holiday(message):
    message_text, user_id = message.text, message.from_user.id
    if message_text == "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è":
        update_row_value(user_id, "holiday", "birthday")
    elif message_text == "–ù–æ–≤—ã–π –≥–æ–¥":
        update_row_value(user_id, "holiday", "new year")
    elif message_text == "14 —Ñ–µ–≤—Ä–∞–ª—è":
        update_row_value(user_id, "holiday", "14th february")
    elif message_text == "23 —Ñ–µ–≤—Ä–∞–ª—è":
        update_row_value(user_id, "holiday", "23th february")
    elif message_text == "‚üµ":
        start_command(message)
        return
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –∫–Ω–æ–ø–∫—É!")
        return
    bot.send_photo(message.chat.id,  LINK_IMAGE[1], "–ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫: ",
                   reply_markup=create_markup(["–†–µ–±–µ–Ω–∫—É", "–†–æ–¥–∏—Ç–µ–ª—è–º", "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É", "–î—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ", "–ù–∞–∑–∞–¥"]))
    bot.register_next_step_handler(message, processing_selected_recipient)


def processing_selected_recipient(message):
    message_text, user_id = message.text, message.from_user.id
    if is_value_in_table(DB_TABLE_USERS_NAME, "holiday", "null"):
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏–∫: ",
                         reply_markup=create_markup(["–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–ù–æ–≤—ã–π –≥–æ–¥", "14 —Ñ–µ–≤—Ä–∞–ª—è", "23 —Ñ–µ–≤—Ä–∞–ª—è"]))
        bot.register_next_step_handler(message, processing_selected_holiday)
        return
    if message_text == "–†–µ–±–µ–Ω–∫—É":
        update_row_value(user_id, "recipient", "child")
        subclass_parameters = ["–ú–∞–ª—å—á–∏–∫—É", "–î–µ–≤–æ—á–∫–µ", "–ù–∞–∑–∞–¥"]
    elif message_text == "–†–æ–¥–∏—Ç–µ–ª—è–º":
        update_row_value(user_id, "recipient", "parents")
        subclass_parameters = ["–ú–∞–º–µ", "–ü–∞–ø–µ", "–ù–∞–∑–∞–¥"]
    elif message_text == "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É":
        update_row_value(user_id, "recipient", "relative")
        subclass_parameters = ["–ë–∞–±—É—à–∫–µ", "–î–µ–¥—É—à–∫–µ", "–¢—ë—Ç–∏", "–î—è–¥–∏", "–ù–∞–∑–∞–¥"]
    elif message_text == "–î—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ":
        update_row_value(user_id, "recipient", "friend or girlfriend")
        subclass_parameters = ["–î—Ä—É–≥—É", "–ü–æ–¥—Ä—É–≥–µ", "–ù–∞–∑–∞–¥"]
    elif message_text == "–ù–∞–∑–∞–¥":
        command_help_with_holiday(message)
        return
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –∫–Ω–æ–ø–∫—É!")
        return
    bot.send_message(message.chat.id, "–ê –∏–º–µ–Ω–Ω–æ?", reply_markup=create_markup(subclass_parameters))
    bot.register_next_step_handler(message, internal_verification)


def internal_verification(message):
    message_text, user_id = message.text, message.from_user.id
    if message_text == "–ú–∞–ª—å—á–∏–∫—É":
        update_row_value(user_id, "recipient", "boy")
    elif message_text == "–î–µ–≤–æ—á–∫–µ":
        update_row_value(user_id, "recipient", "girl")
    elif message_text == "–ú–∞–º–µ":
        update_row_value(user_id, "recipient", "mom")
        update_row_value(user_id, "age", "not necessary")
        confirming_message(message)
        return
    elif message_text == "–ü–∞–ø–µ":
        update_row_value(user_id, "recipient", "dad")
        update_row_value(user_id, "age", "not necessary")
        confirming_message(message)
        return
    elif message_text == "–ë–∞–±—É—à–∫–µ":
        update_row_value(user_id, "recipient", "grandmother")
        update_row_value(user_id, "age", "not necessary")
        confirming_message(message)
        return
    elif message_text == "–î–µ–¥—É—à–∫–µ":
        update_row_value(user_id, "recipient", "grandfather")
        update_row_value(user_id, "age", "not necessary")
        confirming_message(message)
        return
    elif message_text == "–¢—ë—Ç–∏":
        update_row_value(user_id, "recipient", "aunt")
        update_row_value(user_id, "age", "not necessary")
        confirming_message(message)
        return
    elif message_text == "–î—è–¥–∏":
        update_row_value(user_id, "recipient", "uncle")
        update_row_value(user_id, "age", "not necessary")
        confirming_message(message)
        return
    elif message_text == "–î—Ä—É–≥—É":
        update_row_value(user_id, "recipient", "friend")
    elif message_text == "–ü–æ–¥—Ä—É–≥–µ":
        update_row_value(user_id, "recipient", "girlfriend")
    elif message_text == "–ù–∞–∑–∞–¥":
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫: ",
                         reply_markup=create_markup(["–†–µ–±–µ–Ω–∫—É", "–†–æ–¥–∏—Ç–µ–ª—è–º", "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É", "–î—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ", "–ù–∞–∑–∞–¥"]))
        bot.register_next_step_handler(message, processing_selected_recipient)
        return
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –∫–Ω–æ–ø–∫—É!")
        return
    bot.send_photo(message.chat.id, LINK_IMAGE[2],
                   "–£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫: ",
                   reply_markup=create_markup(["–ú–ª–∞–¥—à–µ 12", "12-18", "18-24", "–°—Ç–∞—Ä—à–µ 24", "–ù–∞–∑–∞–¥"]))
    bot.register_next_step_handler(message, indication_age)


def indication_age(message):
    message_text, user_id = message.text, message.from_user.id
    if message_text == "–ú–ª–∞–¥—à–µ 12":
        update_row_value(user_id, "age", "under 12")
    elif message_text == "12-18":
        update_row_value(user_id, "age", "from 12 to 18")
    elif message_text == "18-24":
        update_row_value(user_id, "age", "from 18 to 24")
    elif message_text == "–°—Ç–∞—Ä—à–µ 24":
        update_row_value(user_id, "age", "older 24")
    elif message_text == "–ù–∞–∑–∞–¥":
        if get_data_for_user(user_id)["recipient"] == "boy" or get_data_for_user(user_id)["recipient"] == "girl":
            bot.send_message(message.chat.id, "–ê –∏–º–µ–Ω–Ω–æ?",
                             reply_markup=create_markup(["–ú–∞–ª—å—á–∏–∫—É", "–î–µ–≤–æ—á–∫–µ", "–ù–∞–∑–∞–¥"]))
        elif (get_data_for_user(user_id)["recipient"] == "friend" or
              get_data_for_user(user_id)["recipient"] == "girlfriend"):
            bot.send_message(message.chat.id, "–ê –∏–º–µ–Ω–Ω–æ?",
                             reply_markup=create_markup(["–î—Ä—É–≥—É", "–ü–æ–¥—Ä—É–≥–µ", "–ù–∞–∑–∞–¥"]))
        else:
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫: ",
                             reply_markup=create_markup(
                                 ["–†–µ–±–µ–Ω–∫—É", "–†–æ–¥–∏—Ç–µ–ª—è–º", "–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É", "–î—Ä—É–≥—É/–ø–æ–¥—Ä—É–≥–µ", "–ù–∞–∑–∞–¥"]))
            bot.register_next_step_handler(message, processing_selected_recipient)
            return
        bot.register_next_step_handler(message, internal_verification)
        return
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –∫–Ω–æ–ø–∫—É!")
    confirming_message(message)


def confirming_message(message):
    message_text, user_id = message.text, message.from_user.id
    res, second_res, third_res = (get_data_for_user(user_id)['holiday'],
                                  get_data_for_user(user_id)['recipient'], get_data_for_user(user_id)['age'])
    if res == "birthday":
        holiday = "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
    elif res == "new year":
        holiday = "–ù–æ–≤—ã–π –≥–æ–¥"
    elif res == "14th february":
        holiday = "14 —Ñ–µ–≤—Ä–∞–ª—è"
    else:
        holiday = "23 —Ñ–µ–≤—Ä–∞–ª—è"
    if second_res == "boy":
        recipient = "–ú–∞–ª—å—á–∏–∫—É"
    elif second_res == "girl":
        recipient = "–î–µ–≤–æ—á–∫–µ"
    elif second_res == "mom":
        recipient = "–ú–∞–º–µ"
    elif second_res == "dad":
        recipient = "–ü–∞–ø–µ"
    elif second_res == "grandmother":
        recipient = "–ë–∞–±—É—à–∫–µ"
    elif second_res == "grandfather":
        recipient = "–î–µ–¥—É—à–∫–µ"
    elif second_res == "aunt":
        recipient = "–¢—ë—Ç–∏"
    elif second_res == "uncle":
        recipient = "–î—è–¥–∏"
    elif second_res == "friend":
        recipient = "–î—Ä—É–≥—É"
    else:
        recipient = "–ü–æ–¥—Ä—É–≥–µ"
    if third_res == "under 12":
        age = "–ú–ª–∞–¥—à–µ 12"
    elif third_res == "from 12 to 18":
        age = "12-18"
    elif third_res == "from 18 to 24":
        age = "18-24"
    elif third_res == "older 24":
        age = "–°—Ç–∞—Ä—à–µ 24"
    else:
        age = "–û–ø—Ä–µ–¥–µ–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π"
    bot.send_message(message.chat.id, f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã?\n\n"
                     f"–ü—Ä–∞–∑–¥–Ω–∏–∫: ({holiday});\n–ö–æ–º—É: ({recipient});\n–í–æ–∑—Ä–∞—Å—Ç: ({age})",
                     reply_markup=create_markup(["–ü—Ä–∏–º–µ–Ω–∏—Ç—å", "–ò–∑–º–µ–Ω–∏—Ç—å"]))
    bot.register_next_step_handler(message, generating_gift)


def generating_gift(message):
    message_text, user_id = message.text, message.from_user.id
    if message.content_type != "text":
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –∫–Ω–æ–ø–∫—É!")
        bot.register_next_step_handler(message, generating_gift)
        return
    if message_text == "–ò–∑–º–µ–Ω–∏—Ç—å":
        start_command(message)
        return
    if message_text == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" or message_text == "–ü—Ä–∏–º–µ–Ω–∏—Ç—å":
        pass
    else:
        bot.send_message(message.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—É—é –∫–Ω–æ–ø–∫—É!")
        return
    bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è",
                     reply_markup=ReplyKeyboardRemove())
    formatted_time = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())
    update_row_value(user_id, "timestamp", formatted_time)
    res, second_res, third_res = (get_data_for_user(user_id)['holiday'],
                                  get_data_for_user(user_id)['recipient'],
                                  get_data_for_user(user_id)["age"])
    update_row_value(user_id, "task", PROMPTS_TEMPLATES[res][second_res][third_res])
    system_prompt = ("–¢—ã - –±–æ—Ç-–ø–æ–º–æ—â–∏–∫ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥–∞—Ä–∫–∏, –∏ —Ç–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–∞–≤–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ –∏ —Å—Ç–∏–ª—å–Ω—ã–µ "
                     "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É –ø–æ–¥–∞—Ä–∫–∞, —É—á–∏—Ç—ã–≤–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã.")

    dictionary_from_database = get_data_for_user(user_id)
    promt = gpt.make_promt(dictionary_from_database, system_prompt)
    resp = gpt.send_request(promt)
    success, answer = gpt.process_resp(resp)
    update_row_value(user_id, "answer", answer)

    bot.send_message(message.chat.id, get_data_for_user(user_id)['answer'],
                     reply_markup=create_markup(["–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "–ó–∞–≤–µ—Ä—à–∏—Ç—å", "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤"]))


bot.polling()
